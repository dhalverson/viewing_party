---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=MOVIES_SECRET_KEY&include_adult=false&language=en-US&page=1&query=star%20wars
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 500
      message: Internal Server Error
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '105'
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 16:10:01 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Etag:
      - f71c297ba5c5df33f56304bb71f64e8c
      X-Cache:
      - Error from cloudfront
      Via:
      - 1.1 b2e880ac67c1fba390623b9fc04bd63a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - tDkXYzNyEaTk3f3QKAbVBY8-MwBXsSgszEJVbSslcaLY2uCPDz3GRQ==
    body:
      encoding: UTF-8
      string: '{"status_code":11,"status_message":"Internal error: Something went
        wrong, contact TMDb.","success":false}'
  recorded_at: Tue, 13 Oct 2020 16:10:01 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=MOVIES_SECRET_KEY&include_adult=false&language=en-US&page=2&query=star%20wars
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 16:10:02 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 8bd27032f0d38908fbe32b696e45c288.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 9hitJiElKOoBG2yxYasym5-fjr2lAyD44Nbth74Tc5busz6vQHxSkQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 16:10:02 GMT
recorded_with: VCR 6.0.0
