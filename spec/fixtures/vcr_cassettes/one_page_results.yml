---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=MOVIES_SECRET_KEY&include_adult=false&language=en-US&page=1&query=star%20wars
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 10 Oct 2020 14:11:15 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 23d87d8c2ce38e34462e6c134d187eeb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - B-VxA6bvB7fJxudTfw-JyP0l91J11qeXNzGlHsdxoIV068rjBFBK_g==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJ0b3RhbF9yZXN1bHRzIjoxNDIsInRvdGFsX3BhZ2VzIjo4LCJyZXN1bHRzIjpbeyJwb3B1bGFyaXR5Ijo1OS4zMjUsInZvdGVfY291bnQiOjE0MzkxLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC82RmZDdEF1VkFXOFhKalo3ZVdlTGliUkxXVHcuanBnIiwiaWQiOjExLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3pxa21UWHpqa0FnWG1FV0xSc1k0VXBUV0Nlby5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdGFyIFdhcnMiLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJ0aXRsZSI6IlN0YXIgV2FycyIsInZvdGVfYXZlcmFnZSI6OC4yLCJvdmVydmlldyI6IlByaW5jZXNzIExlaWEgaXMgY2FwdHVyZWQgYW5kIGhlbGQgaG9zdGFnZSBieSB0aGUgZXZpbCBJbXBlcmlhbCBmb3JjZXMgaW4gdGhlaXIgZWZmb3J0IHRvIHRha2Ugb3ZlciB0aGUgZ2FsYWN0aWMgRW1waXJlLiBWZW50dXJlc29tZSBMdWtlIFNreXdhbGtlciBhbmQgZGFzaGluZyBjYXB0YWluIEhhbiBTb2xvIHRlYW0gdG9nZXRoZXIgd2l0aCB0aGUgbG92ZWFibGUgcm9ib3QgZHVvIFIyLUQyIGFuZCBDLTNQTyB0byByZXNjdWUgdGhlIGJlYXV0aWZ1bCBwcmluY2VzcyBhbmQgcmVzdG9yZSBwZWFjZSBhbmQganVzdGljZSBpbiB0aGUgRW1waXJlLiIsInJlbGVhc2VfZGF0ZSI6IjE5NzctMDUtMjUifSx7InBvcHVsYXJpdHkiOjEyNi43MTMsInZvdGVfY291bnQiOjU3MzUsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2RiMzJMYU9pYndFbGlBbVNMMmpqREY2b0Rkai5qcGciLCJpZCI6MTgxODEyLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL1NQa0VpWkd4cTVhSFdRMlp3N0FJVHdTRW8yLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlN0YXIgV2FyczogVGhlIFJpc2Ugb2YgU2t5d2Fsa2VyIiwiZ2VucmVfaWRzIjpbMjgsMTIsODc4XSwidGl0bGUiOiJTdGFyIFdhcnM6IFRoZSBSaXNlIG9mIFNreXdhbGtlciIsInZvdGVfYXZlcmFnZSI6Ni42LCJvdmVydmlldyI6IlRoZSBzdXJ2aXZpbmcgUmVzaXN0YW5jZSBmYWNlcyB0aGUgRmlyc3QgT3JkZXIgb25jZSBhZ2FpbiBhcyB0aGUgam91cm5leSBvZiBSZXksIEZpbm4gYW5kIFBvZSBEYW1lcm9uIGNvbnRpbnVlcy4gV2l0aCB0aGUgcG93ZXIgYW5kIGtub3dsZWRnZSBvZiBnZW5lcmF0aW9ucyBiZWhpbmQgdGhlbSwgdGhlIGZpbmFsIGJhdHRsZSBiZWdpbnMuIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0xMi0xOCJ9LHsicG9wdWxhcml0eSI6NTguOTc5LCJpZCI6MTgxODA4LCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjExMTA2LCJ2b3RlX2F2ZXJhZ2UiOjYuOSwidGl0bGUiOiJTdGFyIFdhcnM6IFRoZSBMYXN0IEplZGkiLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTEyLTEzIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3RhciBXYXJzOiBUaGUgTGFzdCBKZWRpIiwiZ2VucmVfaWRzIjpbODc4LDI4LDEyXSwiYmFja2Ryb3BfcGF0aCI6IlwvNUl3N3pRVEhWUkJPWXBBMFY2ejB5eXBPUFpoLmpwZyIsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJSZXkgZGV2ZWxvcHMgaGVyIG5ld2x5IGRpc2NvdmVyZWQgYWJpbGl0aWVzIHdpdGggdGhlIGd1aWRhbmNlIG9mIEx1a2UgU2t5d2Fsa2VyLCB3aG8gaXMgdW5zZXR0bGVkIGJ5IHRoZSBzdHJlbmd0aCBvZiBoZXIgcG93ZXJzLiBNZWFud2hpbGUsIHRoZSBSZXNpc3RhbmNlIHByZXBhcmVzIHRvIGRvIGJhdHRsZSB3aXRoIHRoZSBGaXJzdCBPcmRlci4iLCJwb3N0ZXJfcGF0aCI6Ilwva09WRVZlZzU5RTB3c25YbUY5bnJoNk9tV0lJLmpwZyJ9LHsicG9wdWxhcml0eSI6NDguNjQxLCJpZCI6MTQwNjA3LCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjE1MDA1LCJ2b3RlX2F2ZXJhZ2UiOjcuNCwidGl0bGUiOiJTdGFyIFdhcnM6IFRoZSBGb3JjZSBBd2FrZW5zIiwicmVsZWFzZV9kYXRlIjoiMjAxNS0xMi0xNSIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlN0YXIgV2FyczogVGhlIEZvcmNlIEF3YWtlbnMiLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzgsMTRdLCJiYWNrZHJvcF9wYXRoIjoiXC9rNkVPcmNrV0Z1ejdJNHo0d2lSd3o4enNqNEguanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IlRoaXJ0eSB5ZWFycyBhZnRlciBkZWZlYXRpbmcgdGhlIEdhbGFjdGljIEVtcGlyZSwgSGFuIFNvbG8gYW5kIGhpcyBhbGxpZXMgZmFjZSBhIG5ldyB0aHJlYXQgZnJvbSB0aGUgZXZpbCBLeWxvIFJlbiBhbmQgaGlzIGFybXkgb2YgU3Rvcm10cm9vcGVycy4iLCJwb3N0ZXJfcGF0aCI6Ilwvd3FuTGR3VlhvQmpLaWJGUlI1VTN5MGFEVWhzLmpwZyJ9LHsicG9wdWxhcml0eSI6NDEuMTcyLCJ2b3RlX2NvdW50Ijo1NjY4LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC80b0Q2VkVjY0Zrb3JFQlRFRFh0cExBYXowUmwuanBnIiwiaWQiOjM0ODM1MCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC83TFowSzRGc0FMcnQ3T2VOSUdPVkxOdUtRUlUuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU29sbzogQSBTdGFyIFdhcnMgU3RvcnkiLCJnZW5yZV9pZHMiOlsxMiw4NzhdLCJ0aXRsZSI6IlNvbG86IEEgU3RhciBXYXJzIFN0b3J5Iiwidm90ZV9hdmVyYWdlIjo2LjYsIm92ZXJ2aWV3IjoiVGhyb3VnaCBhIHNlcmllcyBvZiBkYXJpbmcgZXNjYXBhZGVzIGRlZXAgd2l0aGluIGEgZGFyayBhbmQgZGFuZ2Vyb3VzIGNyaW1pbmFsIHVuZGVyd29ybGQsIEhhbiBTb2xvIG1lZXRzIGhpcyBtaWdodHkgZnV0dXJlIGNvcGlsb3QgQ2hld2JhY2NhIGFuZCBlbmNvdW50ZXJzIHRoZSBub3RvcmlvdXMgZ2FtYmxlciBMYW5kbyBDYWxyaXNzaWFuLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMDUtMTUifSx7InBvcHVsYXJpdHkiOjMyLjEzMSwidm90ZV9jb3VudCI6MTEzNzUsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcLzVqWDNwMGFwVUc1YmtNSHRuS1pjaDB4cGtCUy5qcGciLCJpZCI6MzMwNDU5LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcLzZ0OEVTMWQxMk96V3lDR3hCZURZTEhvYURyVC5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSb2d1ZSBPbmU6IEEgU3RhciBXYXJzIFN0b3J5IiwiZ2VucmVfaWRzIjpbMjgsMTIsODc4XSwidGl0bGUiOiJSb2d1ZSBPbmU6IEEgU3RhciBXYXJzIFN0b3J5Iiwidm90ZV9hdmVyYWdlIjo3LjUsIm92ZXJ2aWV3IjoiQSByb2d1ZSBiYW5kIG9mIHJlc2lzdGFuY2UgZmlnaHRlcnMgdW5pdGUgZm9yIGEgbWlzc2lvbiB0byBzdGVhbCB0aGUgRGVhdGggU3RhciBwbGFucyBhbmQgYnJpbmcgYSBuZXcgaG9wZSB0byB0aGUgZ2FsYXh5LiIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMTItMTQifSx7InBvcHVsYXJpdHkiOjIwLjM5NCwidm90ZV9jb3VudCI6MTE0MiwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvdmVlZTdkbGwxeE13SzE0ZEd0MHhzUWVrWVlzLmpwZyIsImlkIjoxMjE4MCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9zTk5GTEVjQXV5NEMzUnlYQ25Lb0FybjdBdHkuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3RhciBXYXJzOiBUaGUgQ2xvbmUgV2FycyIsImdlbnJlX2lkcyI6WzI4LDEyLDE2LDg3OF0sInRpdGxlIjoiU3RhciBXYXJzOiBUaGUgQ2xvbmUgV2FycyIsInZvdGVfYXZlcmFnZSI6NS45LCJvdmVydmlldyI6IlNldCBiZXR3ZWVuIEVwaXNvZGUgSUkgYW5kIElJSSwgVGhlIENsb25lIFdhcnMgaXMgdGhlIGZpcnN0IGNvbXB1dGVyIGFuaW1hdGVkIFN0YXIgV2FycyBmaWxtLiBBbmFraW4gYW5kIE9iaSBXYW4gbXVzdCBmaW5kIG91dCB3aG8ga2lkbmFwcGVkIEphYmJhIHRoZSBIdXR0J3Mgc29uIGFuZCByZXR1cm4gaGltIHNhZmVseS4gVGhlIFNlcGVyYXRpc3RzIHdpbGwgdHJ5IGFueXRoaW5nIHRvIHN0b3AgdGhlbSBhbmQgcnVpbiBhbnkgY2hhbmNlIG9mIGEgZGlwbG9tYXRpYyBhZ3JlZW1lbnQgYmV0d2VlbiB0aGUgSHV0dHMgYW5kIHRoZSBSZXB1YmxpYy4iLCJyZWxlYXNlX2RhdGUiOiIyMDA4LTA4LTA1In0seyJwb3B1bGFyaXR5IjoxMy4wOTgsInZvdGVfY291bnQiOjc0LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC94b21waHB6N01JYXNxVmx1UFg4M1Rqb1RMOEcuanBnIiwiaWQiOjM5MjIxNiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC91TmpCbk9tZGpab2lXVExROTM4WUpaMWNZVlUuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUGhpbmVhcyBhbmQgRmVyYjogU3RhciBXYXJzIiwiZ2VucmVfaWRzIjpbMjgsMTYsMzUsMTA0MDIsODc4LDEwNzUxXSwidGl0bGUiOiJQaGluZWFzIGFuZCBGZXJiOiBTdGFyIFdhcnMiLCJ2b3RlX2F2ZXJhZ2UiOjcuMSwib3ZlcnZpZXciOiJQaGluZWFzIGFuZCBGZXJiIHRyYXZlbCB0byBhIGdhbGF4eSBmYXIgZmFyIGF3YXkgdG8gaGVscCBvdXQgc29tZSByZWJlbCBoZXJvZXMuIiwicmVsZWFzZV9kYXRlIjoiMjAxNC0wNy0yNiJ9LHsicG9wdWxhcml0eSI6MjUuNTgxLCJ2b3RlX2NvdW50IjoxMDE3MSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvNndrZm92cG43RXE4ZFlOS2FHNVBZM3Eyb3E2LmpwZyIsImlkIjoxODkzLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3FERXZjdFZmQWhlRDd4OVJ6ejh4Y0ZSQUdBVS5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdGFyIFdhcnM6IEVwaXNvZGUgSSAtIFRoZSBQaGFudG9tIE1lbmFjZSIsImdlbnJlX2lkcyI6WzI4LDEyLDg3OF0sInRpdGxlIjoiU3RhciBXYXJzOiBFcGlzb2RlIEkgLSBUaGUgUGhhbnRvbSBNZW5hY2UiLCJ2b3RlX2F2ZXJhZ2UiOjYuNSwib3ZlcnZpZXciOiJBbmFraW4gU2t5d2Fsa2VyLCBhIHlvdW5nIHNsYXZlIHN0cm9uZyB3aXRoIHRoZSBGb3JjZSwgaXMgZGlzY292ZXJlZCBvbiBUYXRvb2luZS4gTWVhbndoaWxlLCB0aGUgZXZpbCBTaXRoIGhhdmUgcmV0dXJuZWQsIGVuYWN0aW5nIHRoZWlyIHBsb3QgZm9yIHJldmVuZ2UgYWdhaW5zdCB0aGUgSmVkaS4iLCJyZWxlYXNlX2RhdGUiOiIxOTk5LTA1LTE5In0seyJwb3B1bGFyaXR5IjoxMi45MDQsInZvdGVfY291bnQiOjE1NiwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvaDQ0V040bVZKNndFcEpnTGFhTm9GanYwTkFvLmpwZyIsImlkIjo0Mjk3OSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSb2JvdCBDaGlja2VuOiBTdGFyIFdhcnMiLCJnZW5yZV9pZHMiOlsxNiwzNSw4NzhdLCJ0aXRsZSI6IlJvYm90IENoaWNrZW46IFN0YXIgV2FycyIsInZvdGVfYXZlcmFnZSI6Ny4zLCJvdmVydmlldyI6IkZhbnMgb2YgQWR1bHQgU3dpbSdzIFwiUm9ib3QgQ2hpY2tlblwiIGFuZCB0aGUgU3RhciBXYXJzIG1vdmllIGZyYW5jaGlzZSB3b24ndCB3YW50IHRvIG1pc3MgdGhpcyBjb2xsZWN0aW9uIG9mIDMwIHNrZXRjaGVzLiBUaGlzIGhpbGFyaW91cyBjb21waWxhdGlvbiBmZWF0dXJlcyBhbiBhcnJheSBvZiBza2l0cyAtLSBzdWNoIGFzIFwiRGFydGggVmFkZXIncyBDb2xsZWN0IENhbGxcIiBhbmQgXCJJbnNpZGUgdGhlIEFULUFUXCIgLS0gYXMgd2VsbCBhcyB0aGUgaW5jcmVkaWJsZSB2b2ljZSB0YWxlbnRzIG9mIEh1bGsgSG9nYW4sIE1hbGNvbG0gTWNEb3dlbGwsIENvbmFuIE8nQnJpZW4gYW5kIGV2ZW4gdGhlIG9yaWdpbmFsIEx1a2UgU2t5d2Fsa2VyIGhpbXNlbGYsIE1hcmsgSGFtaWxsLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDctMDctMTcifSx7InBvcHVsYXJpdHkiOjkuNTUzLCJ2b3RlX2NvdW50IjoxNCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6Ilwvb2NBMEVDaUZvQjRkMUhJVHlFRFFsTGs3eDg0LmpwZyIsImlkIjo2Njc1NzQsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvYzhYSUZ1SkNQVHRUSmRTUnBxblVvTXI2ZUsxLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhdHRsZSBTdGFyIFdhcnMiLCJnZW5yZV9pZHMiOls4NzhdLCJ0aXRsZSI6IkJhdHRsZSBTdGFyIFdhcnMiLCJ2b3RlX2F2ZXJhZ2UiOjQuMywib3ZlcnZpZXciOiJXaGVuIHRoZSBsZWFkZXIgb2YgdGhlIGV2aWwgQ29hbGl0aW9uIHRocmVhdGVucyB0byBkZXN0cm95IGEgUmViZWwgcGxhbmV0IGZvciBpdHMgcmVzb3VyY2VzLCBoaXMgZGF1Z2h0ZXIgd2lsbCBoYXZlIG5vIGNob2ljZSBidXQgdG8gam9pbiB0aGUgUmViZWwgc2lkZSBhbmQgZmlnaHQgZm9yIHdoYXQgaXMgcmlnaHQuIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wMS0yOCJ9LHsicG9wdWxhcml0eSI6MjQuNTE3LCJ2b3RlX2NvdW50Ijo5MTkxLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9vWk5QenhxTTJzNUR5VldhYjA5TlRRU2NEUXQuanBnIiwiaWQiOjE4OTQsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvbXNZbVJGSmZYeTB6c0ZkNzNQQUVxZGV0S3BPLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlN0YXIgV2FyczogRXBpc29kZSBJSSAtIEF0dGFjayBvZiB0aGUgQ2xvbmVzIiwiZ2VucmVfaWRzIjpbMjgsMTIsODc4XSwidGl0bGUiOiJTdGFyIFdhcnM6IEVwaXNvZGUgSUkgLSBBdHRhY2sgb2YgdGhlIENsb25lcyIsInZvdGVfYXZlcmFnZSI6Ni41LCJvdmVydmlldyI6IkZvbGxvd2luZyBhbiBhc3Nhc3NpbmF0aW9uIGF0dGVtcHQgb24gU2VuYXRvciBQYWRtw6kgQW1pZGFsYSwgSmVkaSBLbmlnaHRzIEFuYWtpbiBTa3l3YWxrZXIgYW5kIE9iaS1XYW4gS2Vub2JpIGludmVzdGlnYXRlIGEgbXlzdGVyaW91cyBwbG90IHRoYXQgY291bGQgY2hhbmdlIHRoZSBnYWxheHkgZm9yZXZlci4iLCJyZWxlYXNlX2RhdGUiOiIyMDAyLTA1LTE1In0seyJwb3B1bGFyaXR5IjoyMy43MDksInZvdGVfY291bnQiOjk1MzAsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL3hmU0FvQkVtOU1OQmptbE5jRFlMdkxTTWxucS5qcGciLCJpZCI6MTg5NSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC92Z0dKOVRob0tqRmJRSGJBZUkyOU5zYlQybEsuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3RhciBXYXJzOiBFcGlzb2RlIElJSSAtIFJldmVuZ2Ugb2YgdGhlIFNpdGgiLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJ0aXRsZSI6IlN0YXIgV2FyczogRXBpc29kZSBJSUkgLSBSZXZlbmdlIG9mIHRoZSBTaXRoIiwidm90ZV9hdmVyYWdlIjo3LjMsIm92ZXJ2aWV3IjoiVGhlIGV2aWwgRGFydGggU2lkaW91cyBlbmFjdHMgaGlzIGZpbmFsIHBsYW4gZm9yIHVubGltaXRlZCBwb3dlciAtLSBhbmQgdGhlIGhlcm9pYyBKZWRpIEFuYWtpbiBTa3l3YWxrZXIgbXVzdCBjaG9vc2UgYSBzaWRlLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDUtMDUtMTcifSx7InBvcHVsYXJpdHkiOjEzLjEzMiwidm90ZV9jb3VudCI6Mjc4LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC96OUt0NzVSMDVpMmlCdzY4VHRnN1RhNmFDYkguanBnIiwiaWQiOjc0ODQ5LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2FlOXhsbmtTMnFiNUR5OU10bHU2OEFXaDQyTy5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgU3RhciBXYXJzIEhvbGlkYXkgU3BlY2lhbCIsImdlbnJlX2lkcyI6WzEyLDM1LDg3OCwxMDc1MSwxMDc3MF0sInRpdGxlIjoiVGhlIFN0YXIgV2FycyBIb2xpZGF5IFNwZWNpYWwiLCJ2b3RlX2F2ZXJhZ2UiOjMuMSwib3ZlcnZpZXciOiJMdWtlIFNreXdhbGtlciBhbmQgSGFuIFNvbG8gYmF0dGxlIGV2aWwgSW1wZXJpYWwgZm9yY2VzIHRvIGhlbHAgQ2hld2JhY2NhIHJlYWNoIGhpcyBpbXBlcmlsZWQgZmFtaWx5IG9uIHRoZSBXb29raWVlIHBsYW5ldCAtIGluIHRpbWUgZm9yIExpZmUgRGF5LCB0aGVpciBtb3N0IGltcG9ydGFudCBkYXkgb2YgdGhlIHllYXIhIiwicmVsZWFzZV9kYXRlIjoiMTk3OC0xMi0wMSJ9LHsicG9wdWxhcml0eSI6OC45MzcsInZvdGVfY291bnQiOjE1LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC96SWZmUHdJU3JXNDhxU212QVhFVjI3bEJUTUEuanBnIiwiaWQiOjM3ODM4NiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdGFyIFdhcnM6IEdyZWF0ZXN0IE1vbWVudHMiLCJnZW5yZV9pZHMiOls5OV0sInRpdGxlIjoiU3RhciBXYXJzOiBHcmVhdGVzdCBNb21lbnRzIiwidm90ZV9hdmVyYWdlIjo2LjUsIm92ZXJ2aWV3IjoiQWxleCBaYW5lIGNvdW50cyBkb3duIHRoZSB0b3AgMjAgU3RhciBXYXJzIG1vbWVudHMgYXMgdm90ZWQgYnkgdGhlIHB1YmxpYy4gSW5jbHVkZXMgY29udHJpYnV0aW9ucyBmcm9tIGZhbW91cyBmYW5zIGFzIHdlbGwgYXMgdGhlIHN0YXJzIGFuZCBjcmV3IG9mIHRoZSBpbnRlcmdhbGFjdGljIHNhZ2EuIiwicmVsZWFzZV9kYXRlIjoiMjAxNS0xMi0yNiJ9LHsicG9wdWxhcml0eSI6OS45NDgsInZvdGVfY291bnQiOjksInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2lMUjRteXUwUkVEMUpZUUdFY0pwT003Q1dBTi5qcGciLCJpZCI6NzI0NDgsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvZThPaEdHS1FtTFh3eXJvTndYclhuY2VqbTVjLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlN0YXIgV2FyczogQSBNdXNpY2FsIEpvdXJuZXkiLCJnZW5yZV9pZHMiOlsxMDQwMl0sInRpdGxlIjoiU3RhciBXYXJzOiBBIE11c2ljYWwgSm91cm5leSIsInZvdGVfYXZlcmFnZSI6Nywib3ZlcnZpZXciOiJBY3RvciBJYW4gTWNEaWFybWlkIGludHJvZHVjZXMgc2V2ZXJhbCBtdXNpYyB2aWRlb3Mgc2NvcmVkIGJ5IHRoZSBpbmZhbW91cyBTdGFyIFdhcnMgc2NvcmVzIGNvbXBvc2VkIGJ5IEpvaG4gV2lsbGlhbXMuIFRoZXJlIGFyZSBzaXh0ZWVuIGNoYXB0ZXJzIGluIGFsbCwgYW5kIGFyZSBhbGwgcGVyZmVjdGx5IGNyZWF0ZWQgdG8gc2hvdyB1cyB0aGUgZ3JlYXQgbXVzaWMgZnJvbSB0aGUgc2l4IGZpbG1zLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDUtMDUtMDMifSx7InBvcHVsYXJpdHkiOjguMTQ4LCJ2b3RlX2NvdW50IjoyOCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvZEZ2dWRMZ3ZTMFVwbjJYNndQQlJubnRYQ0J5LmpwZyIsImlkIjoxMjgyOTUsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvMUhocDB5czIwVjZJNzNQaDBNeWhjRFgyS09YLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlN0YXIgV2FyczogVGhlIExlZ2FjeSBSZXZlYWxlZCIsImdlbnJlX2lkcyI6Wzk5XSwidGl0bGUiOiJTdGFyIFdhcnM6IFRoZSBMZWdhY3kgUmV2ZWFsZWQiLCJ2b3RlX2F2ZXJhZ2UiOjcuMSwib3ZlcnZpZXciOiJGaWxtLW1ha2VycyBhbmQgYWNhZGVtaWNzIGRpc2N1c3MgdGhlIHVzZSBvZiBteXRob2xvZ3kgaW4gU3RhciBXYXJzIGFuZCB0aGUgaW1wYWN0IG9mIHRoZSBmaWxtcyBvbiBzb2NpZXR5IiwicmVsZWFzZV9kYXRlIjoiMjAwNy0wNS0yOCJ9LHsicG9wdWxhcml0eSI6OS43MjIsInZvdGVfY291bnQiOjkyLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9taTJsVmhvMnpwZndjeEk2eUMxUVlKaTQzNUQuanBnIiwiaWQiOjUxODg4LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlJvYm90IENoaWNrZW46IFN0YXIgV2FycyBFcGlzb2RlIElJSSIsImdlbnJlX2lkcyI6WzE2LDM1LDg3OF0sInRpdGxlIjoiUm9ib3QgQ2hpY2tlbjogU3RhciBXYXJzIEVwaXNvZGUgSUlJIiwidm90ZV9hdmVyYWdlIjo3LjQsIm92ZXJ2aWV3IjoiUm9ib3QgQ2hpY2tlbjogU3RhciBXYXJzIEVwaXNvZGUgSUlJLCBkaXJlY3RlZCBieSBDaHJpcyBNY0theSwgY29tYmluZXMgdGhlIHNhdGlyaWNhbCBzZW5zaWJpbGl0aWVzIG9mIEdyZWVuIGFuZCBNYXR0aGV3IFNlbnJlaWNoJ3MgUm9ib3QgQ2hpY2tlbiB3aXRoIGNoYXJhY3RlcnMgb2YgdGhlIFN0YXIgV2FycyB1bml2ZXJzZS4iLCJyZWxlYXNlX2RhdGUiOiIyMDEwLTEyLTE5In0seyJwb3B1bGFyaXR5Ijo5LjY2OCwidm90ZV9jb3VudCI6ODgsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2pibTFIUVBIWkpDOXVHcG5jcDE1RWZ6c29oeS5qcGciLCJpZCI6NDI5ODIsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUm9ib3QgQ2hpY2tlbjogU3RhciBXYXJzIEVwaXNvZGUgSUkiLCJnZW5yZV9pZHMiOlsxNiw4NzhdLCJ0aXRsZSI6IlJvYm90IENoaWNrZW46IFN0YXIgV2FycyBFcGlzb2RlIElJIiwidm90ZV9hdmVyYWdlIjo3LjYsIm92ZXJ2aWV3IjoiU2V0aCBHcmVlbiBhbmQgTWF0dGhldyBTZW5yZWljaCBzZXJ2ZSB1cCBtb3JlIGhpbGFyaW91cyBTdGFyIFdhcnMtaW5zcGlyZWQgc2F0aXJlIGluIHRoaXMgc2Vjb25kIGNvbXBpbGF0aW9uIG9mIHNrZXRjaGVzIGZlYXR1cmluZyB0aGUgemFueSBzdG9wLW1vdGlvbiBhbmltYXRpb24gb2YgQWR1bHQgU3dpbSdzIFwiUm9ib3QgQ2hpY2tlbi5cIiBHYXJ5IHRoZSBzdG9ybXRyb29wZXIgZGVhbHMgd2l0aCBpcmFzY2libGUgYm9zcyBEYXJ0aCBWYWRlciBvbiBUYWtlIFlvdXIgRGF1Z2h0ZXIgdG8gV29yayBEYXksIHdoaWxlIEFuYWtpbiBiYWJ5c2l0cyBhIGNlcnRhaW4gdXAtYW5kLWNvbWluZyBKZWRpLiBDYXJyaWUgRmlzaGVyLCBCaWxseSBEZWUgV2lsbGlhbXMsIENvbmFuIE8nQnJpZW4gYW5kIG90aGVyIHN0YXJzIHByb3ZpZGUgdm9pY2VzLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDgtMTEtMTYifSx7InBvcHVsYXJpdHkiOjEwLjU0Mywidm90ZV9jb3VudCI6MSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvNkNISTFvQktyUTBxVTJEN2prNjdteE9wNHp2LmpwZyIsImlkIjo3NDkzMzYsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU3RhciBXYXJzOiBXcmF0aCBvZiB0aGUgTWFuZGFsb3JpYW4iLCJnZW5yZV9pZHMiOltdLCJ0aXRsZSI6IlN0YXIgV2FyczogV3JhdGggb2YgdGhlIE1hbmRhbG9yaWFuIiwidm90ZV9hdmVyYWdlIjo2LCJvdmVydmlldyI6IlllYXJzIGFmdGVyIHRoZSBDbG9uZSBXYXJzIGVuZCwgRGFydGggVmFkZXIgc2VuZHMgYm91bnR5IGh1bnRlciBCb2JhIEZldHQgdG8gS2FzaHl5eWsgdG8gdHJhY2sgZG93biB0aGUgbGFzdCBvZiB0aGUgSmVkaS4gRmV0dCwgbW90aXZhdGVkIGJ5IHJldmVuZ2UgZm9yIGhpcyBmYXRoZXIncyBkZWF0aCwgcHJvdmVzIGVmZmVjdGl2ZSAtIGJ1dCBoZSBzb29uIGZpbmRzIG91dCBhIHRlcnJpYmxlIHRydXRoIGFib3V0IFZhZGVyIHdoaWxlIG9uIHRoZSBodW50IHRoYXQgZ2l2ZXMgaGltIGEgY2hhbmdlIG9mIGhlYXJ0LiIsInJlbGVhc2VfZGF0ZSI6IiJ9XX0=
  recorded_at: Sat, 10 Oct 2020 14:11:15 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=MOVIES_SECRET_KEY&include_adult=false&language=en-US&page=2&query=star%20wars
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 10 Oct 2020 02:10:23 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - RefreshHit from cloudfront
      Via:
      - 1.1 824a5d9ed02451bcb68b15ae5991dce0.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - "-7h096NV9Gqnno29zVF5QMPxSAWsWlWR1K1x0pZ4GJZ7uCSENMkD3w=="
      Age:
      - '43252'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 10 Oct 2020 14:11:15 GMT
recorded_with: VCR 6.0.0
