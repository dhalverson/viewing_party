---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=MOVIES_SECRET_KEY&include_adult=false&language=en-US&page=1&sort_by=vote_average.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 10 Oct 2020 05:40:13 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 a44b9db7a2d103360945ab52619e5016.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - u9WJS0J_5Xi4Qv49uMpUa2p2P0EDb1EIrfO3NAMiI_o-iWWj9Vv1qw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 10 Oct 2020 05:40:13 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=MOVIES_SECRET_KEY&include_adult=false&language=en-US&page=2&sort_by=vote_average.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 10 Oct 2020 05:40:13 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e158a5cd644f102abc630a9f56b59d78.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - zV3_sNWojDUb1ssf7JepxRpjGsHkooB0aa2kYKH76_DHIBsys-oeoA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 10 Oct 2020 05:40:13 GMT
recorded_with: VCR 6.0.0
